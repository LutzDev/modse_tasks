/**
 * generated by Xtext 2.25.0
 */
package org.xtext.aufgabe4.jsondsl.jsonDsl.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.xtext.aufgabe4.jsondsl.jsonDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JsonDslPackage
 * @generated
 */
public class JsonDslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static JsonDslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsonDslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = JsonDslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JsonDslSwitch<Adapter> modelSwitch =
    new JsonDslSwitch<Adapter>()
    {
      @Override
      public Adapter caseJSON_Document(JSON_Document object)
      {
        return createJSON_DocumentAdapter();
      }
      @Override
      public Adapter caseJSON_Value(JSON_Value object)
      {
        return createJSON_ValueAdapter();
      }
      @Override
      public Adapter caseJSON_Array(JSON_Array object)
      {
        return createJSON_ArrayAdapter();
      }
      @Override
      public Adapter caseJSON_String(JSON_String object)
      {
        return createJSON_StringAdapter();
      }
      @Override
      public Adapter caseJSON_Boolean(JSON_Boolean object)
      {
        return createJSON_BooleanAdapter();
      }
      @Override
      public Adapter caseJSON_Number(JSON_Number object)
      {
        return createJSON_NumberAdapter();
      }
      @Override
      public Adapter caseJSON_Member(JSON_Member object)
      {
        return createJSON_MemberAdapter();
      }
      @Override
      public Adapter caseJSON_Object(JSON_Object object)
      {
        return createJSON_ObjectAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Document <em>JSON Document</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Document
   * @generated
   */
  public Adapter createJSON_DocumentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Value <em>JSON Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Value
   * @generated
   */
  public Adapter createJSON_ValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Array <em>JSON Array</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Array
   * @generated
   */
  public Adapter createJSON_ArrayAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_String <em>JSON String</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_String
   * @generated
   */
  public Adapter createJSON_StringAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Boolean <em>JSON Boolean</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Boolean
   * @generated
   */
  public Adapter createJSON_BooleanAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Number <em>JSON Number</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Number
   * @generated
   */
  public Adapter createJSON_NumberAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Member <em>JSON Member</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Member
   * @generated
   */
  public Adapter createJSON_MemberAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Object <em>JSON Object</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JSON_Object
   * @generated
   */
  public Adapter createJSON_ObjectAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //JsonDslAdapterFactory

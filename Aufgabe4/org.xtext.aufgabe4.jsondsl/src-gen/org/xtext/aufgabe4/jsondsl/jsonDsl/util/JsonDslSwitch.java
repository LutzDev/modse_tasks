/**
 * generated by Xtext 2.25.0
 */
package org.xtext.aufgabe4.jsondsl.jsonDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.aufgabe4.jsondsl.jsonDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.aufgabe4.jsondsl.jsonDsl.JsonDslPackage
 * @generated
 */
public class JsonDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static JsonDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsonDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = JsonDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case JsonDslPackage.JSON_DOCUMENT:
      {
        JSON_Document jsoN_Document = (JSON_Document)theEObject;
        T result = caseJSON_Document(jsoN_Document);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JsonDslPackage.JSON_VALUE:
      {
        JSON_Value jsoN_Value = (JSON_Value)theEObject;
        T result = caseJSON_Value(jsoN_Value);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JsonDslPackage.JSON_ARRAY:
      {
        JSON_Array jsoN_Array = (JSON_Array)theEObject;
        T result = caseJSON_Array(jsoN_Array);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JsonDslPackage.JSON_STRING:
      {
        JSON_String jsoN_String = (JSON_String)theEObject;
        T result = caseJSON_String(jsoN_String);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JsonDslPackage.JSON_BOOLEAN:
      {
        JSON_Boolean jsoN_Boolean = (JSON_Boolean)theEObject;
        T result = caseJSON_Boolean(jsoN_Boolean);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JsonDslPackage.JSON_NUMBER:
      {
        JSON_Number jsoN_Number = (JSON_Number)theEObject;
        T result = caseJSON_Number(jsoN_Number);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JsonDslPackage.JSON_MEMBER:
      {
        JSON_Member jsoN_Member = (JSON_Member)theEObject;
        T result = caseJSON_Member(jsoN_Member);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case JsonDslPackage.JSON_OBJECT:
      {
        JSON_Object jsoN_Object = (JSON_Object)theEObject;
        T result = caseJSON_Object(jsoN_Object);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON Document</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON Document</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_Document(JSON_Document object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_Value(JSON_Value object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON Array</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON Array</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_Array(JSON_Array object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_String(JSON_String object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON Boolean</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON Boolean</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_Boolean(JSON_Boolean object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_Number(JSON_Number object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON Member</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON Member</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_Member(JSON_Member object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JSON Object</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JSON Object</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJSON_Object(JSON_Object object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //JsonDslSwitch

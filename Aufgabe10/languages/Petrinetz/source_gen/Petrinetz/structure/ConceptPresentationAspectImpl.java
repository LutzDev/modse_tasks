package Petrinetz.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Marke;
  private ConceptPresentation props_Petrinetz;
  private ConceptPresentation props_Stelle;
  private ConceptPresentation props_StellenReference;
  private ConceptPresentation props_Transition;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Marke:
        if (props_Marke == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Marke");
          props_Marke = cpb.create();
        }
        return props_Marke;
      case LanguageConceptSwitch.Petrinetz:
        if (props_Petrinetz == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Petrinetz = cpb.create();
        }
        return props_Petrinetz;
      case LanguageConceptSwitch.Stelle:
        if (props_Stelle == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Stelle = cpb.create();
        }
        return props_Stelle;
      case LanguageConceptSwitch.StellenReference:
        if (props_StellenReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x8151472b9fd84208L, 0xa479dc05429f091aL, 0x5cf56a8db9cb9222L, 0x5cf56a8db9cb9223L, "stelle", "", "");
          props_StellenReference = cpb.create();
        }
        return props_StellenReference;
      case LanguageConceptSwitch.Transition:
        if (props_Transition == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Transition = cpb.create();
        }
        return props_Transition;
    }
    return null;
  }
}
